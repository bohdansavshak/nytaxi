---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-service
  namespace: bohdansavshak
spec:
  revisionHistoryLimit: 5
  replicas: 2
  selector:
    matchLabels:
      app: backend-service
  template:
    metadata:
      labels:
        app: backend-service
    spec:
      containers:
        - name: backend-service
          image: CONTAINER_IMAGE
          ports:
            - containerPort: 8081
          env:
            - name: APP
              value: backend
          envFrom:
            - secretRef:
                name: bohdansavshak-secret
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: total-calculator-cron
  namespace: bohdansavshak
spec:
  schedule: "0 0 * * *"
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: total-calculator-cron
              image: CONTAINER_IMAGE
              imagePullPolicy: Always
              # Add any required args here
              env:
                - name: APP
                  value: total-calculator
          restartPolicy: OnFailure
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: bohdansavshak
  labels:
    app: frontend
spec:
  replicas: 2
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: CONTAINER_IMAGE
          ports:
            - containerPort: 8080
          env:
            - name: APP
              value: frontend

---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service-name
  namespace: bohdansavshak
spec:
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: promotion-ingress
  namespace: bohdansavshak
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/group.name: frontend
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:467576817753:certificate/ac9d4b23-93bd-4d22-aa22-bb1f63dea702
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
  labels:
    app: promotion-ingress
spec:
  ingressClassName: alb
  rules:
    - host: promotion.bohdansavshak.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend-service-name
                port:
                  number: 8080

---
apiVersion: batch/v1
kind: Job
metadata:
  name: client
  namespace: bohdansavshak
spec:
  template:
    spec:
      containers:
        - name: client
          image: CONTAINER_IMAGE
          env:
            - name: APP
              value: client
          envFrom:
            - secretRef:
                name: bohdansavshak-client-secret
          volumeMounts:
            - name: volume-with-sample-data
              mountPath: /data
      volumes:
        - name: volume-with-sample-data
          persistentVolumeClaim:
            claimName: sample-data-pvc
      restartPolicy: OnFailure
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sample-data-pvc
  namespace: bohdansavshak
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi